<!DOCTYPE html>
<html lang="kab">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Lmed Taqbaylit s Tefyar</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            display: flex;
            flex-direction: column;
            align-items: center;
            justify-content: center;
            height: 100vh;
            background-color: #f9f9f9;
            margin: 0;
        }
        h1 {
            margin-bottom: 20px;
        }
        .subtitle {
            margin-bottom: 20px;
            font-size: 18px;
            font-weight: bold;
            color: #333;
        }
        .game-container {
            display: flex;
            flex-direction: column;
            align-items: center;
            width: 90%;
            max-width: 800px;
        }
        .sentence-box {
            margin: 10px 0;
            text-align: center;
        }
        .word-list {
            display: flex;
            flex-wrap: wrap;
            gap: 10px;
            justify-content: center;
        }
        .word-button {
            padding: 10px;
            background-color: #007bff;
            color: white;
            border: none;
            border-radius: 5px;
            cursor: grab;
            text-align: center;
            user-select: none;
        }
        .word-button.dragging {
            opacity: 0.5;
        }
        .answer-box {
            display: flex;
            gap: 10px;
            justify-content: center;
            margin: 20px 0;
        }
        .placeholder {
            width: 100px;
            height: 30px;
            border: 2px dashed #ccc;
            border-radius: 5px;
            text-align: center;
            line-height: 30px;
            background-color: #fff;
        }
        .feedback {
            font-size: 18px;
            margin-top: 20px;
        }
        .correct {
            color: green;
        }
        .incorrect {
            color: red;
        }
        .controls {
            margin-top: 20px;
        }
        .controls button {
            padding: 10px 20px;
            font-size: 16px;
            margin: 0 10px;
            border: none;
            border-radius: 5px;
            cursor: pointer;
            transition: background-color 0.3s;
        }
        .controls button.play-again {
            background-color: #28a745;
            color: white;
        }
        .controls button.play-again:hover {
            background-color: #218838;
        }
        .controls button.exit {
            background-color: #dc3545;
            color: white;
        }
        .controls button.exit:hover {
            background-color: #c82333;
        }
        .hidden {
            display: none;
        }
        .instructions {
            margin-top: 20px;
            font-size: 14px;
            color: #555;
        }
        /* Styling for the Launch Game button */
        #launchGameButton {
            padding: 15px 30px;
            font-size: 18px;
            background-color: #007bff; /* Blue color */
            color: white;
            border: none;
            border-radius: 5px;
            cursor: pointer;
            transition: background-color 0.3s;
        }
        #launchGameButton:hover {
            background-color: #0056b3;
        }
        /* Styling for the Next Sentence button */
        #nextButton {
            padding: 10px 20px;
            font-size: 16px;
            background-color: #28a745; /* Green color */
            color: white;
            border: none;
            border-radius: 5px;
            cursor: pointer;
            transition: background-color 0.3s;
        }
        #nextButton:hover {
            background-color: #218838;
        }
    </style>
</head>
<body>
    <h1>TAFRARA n TIRA</h1>
    <div class="subtitle">Tafyirt Tasuqilt</div>
    <!-- Launch Game Button -->
    <button id="launchGameButton">URAR</button>
    <div class="game-container hidden" id="gameContainer">
        <div class="sentence-box" id="frenchSentence"></div>
        <div class="sentence-box" id="englishSentence"></div>
        <div class="sentence-box" id="kabylePrompt">Tiririt-ik(im): --------------------</div>
        <div class="answer-box" id="answerBox"></div>
        <div class="word-list" id="wordList"></div>
        <div class="feedback" id="feedback"></div>
        <div class="controls hidden" id="controls">
            <button id="nextButton" onclick="nextSentence()">DDU</button>
            <button class="play-again hidden" onclick="resetGame()">Rnu Urar</button>
            <button class="exit hidden" onclick="exitGame()">Ffeɣ</button>
        </div>
    </div>
    <div class="instructions">
        Jbed awal, sers-it deg umkan iwulmen.
    </div>

    <script>
        // Fullscreen function
        function openFullscreen() {
            const elem = document.documentElement; // Targets the entire page
            if (elem.requestFullscreen) {
                elem.requestFullscreen();
            } else if (elem.mozRequestFullScreen) { // Firefox
                elem.mozRequestFullScreen();
            } else if (elem.webkitRequestFullscreen) { // Chrome, Safari, and Opera
                elem.webkitRequestFullscreen();
            } else if (elem.msRequestFullscreen) { // IE/Edge
                elem.msRequestFullscreen();
            }
        }

        // Data and game initialization
        const sentences = [
            {
                french: "Bonjour, comment ça va ?",
                english: "Good morning, how are you ?",
                kabyle: "azul, amek tettiliḍ?", // No space before ?
                words: ["azul", "amek", "tettiliḍ"]
            },
            {
                french: "Merci pour ton aide.",
                english: "Thank you for your help.",
                kabyle: "tanemmirt i talelt-im.", // Period remains
                words: ["tanemmirt", "i", "talelt-im"]
            },
            {
                french: "Je suis très content aujourd’hui.",
                english: "I am very happy today.",
                kabyle: "ferḥeɣ aṭas ass-a.", // Period remains
                words: ["ferḥeɣ", "aṭas", "ass-a"]
            },
            {
                french: "Excuse-moi, où est la salle de classe ?",
                english: "Excuse me, where is the classroom?",
                kabyle: "suref-iyi, anda tella tneɣrit?", // No space before ?
                words: ["suref-iyi", "anda", "tella", "tneɣrit"]
            },
            {
                french: "Oui, je veux bien jouer avec toi.",
                english: "Yes, I would like to play with you.",
                kabyle: "ih, riɣ ad urareɣ yid-k.", // Period remains
                words: ["ih", "riɣ", "ad", "urareɣ", "yid-k"]
            }
        ];

        let currentSentenceIndex = 0;
        let answerPlaceholders = [];
        let wordButtons = [];

        function shuffleArray(array) {
            for (let i = array.length - 1; i > 0; i--) {
                const j = Math.floor(Math.random() * (i + 1));
                [array[i], array[j]] = [array[j], array[i]];
            }
            return array;
        }

        function createGame() {
            const sentence = sentences[currentSentenceIndex];
            document.getElementById('frenchSentence').textContent = `Français: ${sentence.french}`;
            document.getElementById('englishSentence').textContent = `English: ${sentence.english}`;

            const answerBox = document.getElementById('answerBox');
            answerBox.innerHTML = '';
            answerPlaceholders = [];
            
            // Split the Kabyle sentence into words, removing punctuation for placeholders
            const kabyleWords = sentence.kabyle.split(' ').map(word => word.replace(/[?.]/g, '').trim()); // Remove ? and .
            
            kabyleWords.forEach(word => {
                const placeholder = document.createElement('div');
                placeholder.classList.add('placeholder');
                placeholder.dataset.word = word; // Store the cleaned word
                placeholder.addEventListener('dragover', (e) => e.preventDefault());
                placeholder.addEventListener('drop', (e) => handleDrop(e, placeholder));
                answerBox.appendChild(placeholder);
                answerPlaceholders.push(placeholder);
            });

            const wordList = document.getElementById('wordList');
            wordList.innerHTML = '';

            // Add distractors from other sentences
            const distractors = [];
            for (let i = 0; i < sentences.length; i++) {
                if (i !== currentSentenceIndex) {
                    distractors.push(...sentences[i].words);
                }
            }
            const shuffledDistractors = shuffleArray(distractors).slice(0, 2);

            const allWords = [...sentence.words, ...shuffledDistractors];
            wordButtons = shuffleArray(allWords).map(word => {
                const button = document.createElement('button');
                button.textContent = word;
                button.classList.add('word-button');
                button.draggable = true;
                button.onclick = () => playAudio(`audio/${word}.ogg`);
                button.addEventListener('dragstart', (e) => handleDragStart(e, button));
                button.addEventListener('dragend', () => handleDragEnd(button));
                wordList.appendChild(button);
                return button;
            });

            document.getElementById('feedback').textContent = '';
            document.getElementById('controls').classList.add('hidden');
        }

        function handleDragStart(e, button) {
            e.dataTransfer.setData('text/plain', button.textContent);
            button.classList.add('dragging');
        }

        function handleDragEnd(button) {
            button.classList.remove('dragging');
        }

        function handleDrop(e, placeholder) {
            e.preventDefault();
            const word = e.dataTransfer.getData('text/plain');
            placeholder.textContent = word;

            // Check if all placeholders are filled
            if (answerPlaceholders.every(p => p.textContent)) {
                checkAnswer();
            }
        }

        function checkAnswer() {
            const feedback = document.getElementById('feedback');
            const sentence = sentences[currentSentenceIndex];

            // Create the correct sentence without punctuation for comparison
            const correctSentenceWithoutPunctuation = sentence.words.join(' ');

            // Get the user's input from placeholders
            const userAnswer = answerPlaceholders.map(p => p.textContent).join(' ');

            if (userAnswer === correctSentenceWithoutPunctuation) {
                feedback.textContent = 'Ayuz!';
                feedback.classList.add('correct');
                feedback.classList.remove('incorrect');
            } else {
                feedback.textContent = `Diri-tt. Aseɣti: ${sentence.kabyle}`;
                feedback.classList.add('incorrect');
                feedback.classList.remove('correct');
            }

            document.getElementById('controls').classList.remove('hidden');

            if (currentSentenceIndex === sentences.length - 1) {
                document.getElementById('nextButton').classList.add('hidden');
                document.querySelector('.play-again').classList.remove('hidden');
                document.querySelector('.exit').classList.remove('hidden');
            }
        }

        function nextSentence() {
            currentSentenceIndex++;
            if (currentSentenceIndex < sentences.length) {
                createGame();
            }
        }

        function resetGame() {
            currentSentenceIndex = 0;
            createGame();
        }

        function exitGame() {
            if (confirm("Tebɣiḍ ad tefɣeḍ seg wurar?")) {
                try {
                    window.close();
                } catch (error) {
                    alert("Iminig-inek ur iteg ara tigawt-a. Mdel asfaylu s wufus.");
                }
            }
        }

        // Audio player functionality
        function playAudio(audioFilePath) {
            const audioPlayer = document.getElementById('gameAudio');
            audioPlayer.src = audioFilePath; // Set the audio file source
            audioPlayer.play().catch(error => {
                console.error("Error playing audio:", error);
            });
        }

        // Add event listener to the "Launch Game" button
        document.getElementById('launchGameButton').addEventListener('click', () => {
            openFullscreen(); // Enter fullscreen mode
            document.getElementById('gameContainer').classList.remove('hidden'); // Show the game
            document.getElementById('launchGameButton').style.display = 'none'; // Hide the launch button
            createGame(); // Initialize the game
        });
    </script>

    <!-- Hidden audio player -->
    <audio id="gameAudio" preload="auto"></audio>
</body>
</html>
